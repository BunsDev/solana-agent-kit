{
  "compilerOptions": {
    "target": "es2020",
    "module": "commonjs",
    "lib": ["es2020", "dom"],
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true,
    "noImplicitAny": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitThis": true,
    "useUnknownInCatchVariables": true,
    "alwaysStrict": true,
    "exactOptionalPropertyTypes": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitOverride": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true,
    "baseUrl": ".",
    "paths": {
      "@src/*": ["src/*"],
      "@packages/*": ["packages/*"]
    }
  },
  "include": ["src/**/*", "packages/plugin-nft/3land", "packages/plugin-defi/solayer", "packages/plugin-misc/tiplink", "packages/plugin-misc/squads", "packages/plugin-misc/sns", "packages/plugin-misc/helius", "packages/plugin-misc/gibwork", "packages/plugin-misc/alldomains", "packages/plugin-token/pyth", "packages/plugin-defi/drift/actions/availableMarkets.ts", "packages/plugin-defi/drift/actions/createDriftUserAccount.ts", "packages/plugin-defi/drift/actions/createVault.ts", "packages/plugin-defi/drift/actions/depositIntoVault.ts", "packages/plugin-defi/drift/actions/depositToDriftUserAccount.ts", "packages/plugin-defi/drift/actions/deriveVaultAddress.ts", "packages/plugin-defi/drift/actions/doesUserHaveDriftAccount.ts", "packages/plugin-defi/drift/actions/driftUserAccountInfo.ts", "packages/plugin-defi/drift/actions/entryQuoteOfPerpTrade.ts", "packages/plugin-defi/drift/actions/getLendAndBorrowAPY.ts", "packages/plugin-defi/drift/actions/perpMarketFundingRate.ts", "packages/plugin-defi/drift/actions/requestUnstakeFromDriftInsuranceFund.ts", "packages/plugin-defi/drift/actions/requestWithdrawalFromVault.ts", "packages/plugin-defi/drift/actions/stakeToDriftInsuranceFund.ts", "packages/plugin-defi/drift/actions/swapSpotToken.ts", "packages/plugin-defi/drift/actions/tradeDelegatedDriftVault.ts", "packages/plugin-defi/drift/actions/tradePerpAccount.ts", "packages/plugin-defi/drift/actions/unstakeFromDriftInsuranceFund.ts", "packages/plugin-defi/drift/actions/updateDriftVaultDelegate.ts", "packages/plugin-defi/drift/actions/updateVault.ts", "packages/plugin-defi/drift/actions/vaultInfo.ts", "packages/plugin-defi/drift/actions/withdrawFromDriftAccount.ts", "packages/plugin-defi/drift/actions/withdrawFromVault.ts", "packages/plugin-defi/flash/actions/flashCloseTrade.ts", "packages/plugin-defi/flash/actions/flashOpenTrade.ts", "packages/plugin-defi/lulo/actions/lendAsset.ts", "packages/plugin-defi/lulo/actions/luloLend.ts", "packages/plugin-defi/lulo/actions/luloWithdraw.ts", "packages/plugin-defi/openbook/actions/createOpenbookMarket.ts", "packages/plugin-defi/orca/actions/createOrcaSingleSidedWhirlpool.ts", "packages/plugin-defi/voltr/actions/depositStrategy.ts", "packages/plugin-defi/voltr/actions/getPositionValues.ts", "packages/plugin-defi/voltr/actions/withdrawStrategy.ts", "packages/plugin-nft/metaplex/actions/deployCollection.ts", "packages/plugin-nft/metaplex/actions/deployToken.ts", "packages/plugin-nft/metaplex/actions/getAsset.ts", "packages/plugin-nft/metaplex/actions/getAssetsByAuthority.ts", "packages/plugin-nft/metaplex/actions/getAssetsByCreator.ts", "packages/plugin-nft/metaplex/actions/mintNFT.ts", "packages/plugin-nft/metaplex/actions/searchAssets.ts", "packages/plugin-token/lightprotocol/actions/compressedAirdrop.ts", "packages/plugin-token/pumpfun/actions/launchPumpfunToken.ts", "packages/plugin-token/solana/actions/balance.ts", "packages/plugin-token/solana/actions/closeEmptyTokenAccounts.ts", "packages/plugin-token/solana/actions/getTPS.ts", "packages/plugin-token/solana/actions/requestFunds.ts", "packages/plugin-token/solana/actions/transfer.ts", "packages/plugin-defi/adrena/anchor", "packages/plugin-token/solana/actions/tokenBalances.ts"],
  "exclude": ["node_modules", "dist", "packages"]
}
